local TweenService = game:GetService("TweenService");

local RunService = game:GetService("RunService");
local function TheNotificationFrame()	local TextService = game:GetService("TextService");
local Notification = Instance.new("ScreenGui")	
local Frame = Instance.new("Frame")	local Player = game:GetService("Players").LocalPlayer;
local TitleText = Instance.new("TextLabel")	
local TextText = Instance.new("TextLabel")	local NotifGui = Instance.new("ScreenGui");
local Exit = Instance.new("TextButton")	NotifGui.Name = "AkaliNotif";
local Timer = Instance.new("TextLabel")	NotifGui.Parent = RunService:IsStudio() and Player.PlayerGui or game:GetService("CoreGui");


--Properties:	local Container = Instance.new("Frame");

Container.Name = "Container";
Notification.Name = "Notification"	Container.Position = UDim2.new(0, 20, 0.5, -20);
Notification.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")	Container.Size = UDim2.new(0, 300, 0.5, 0);
Notification.ZIndexBehavior = Enum.ZIndexBehavior.Sibling	Container.BackgroundTransparency = 1;

Container.Parent = NotifGui;
Frame.Parent = Notification	
Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)	local function Image(ID, Button)
Frame.BackgroundTransparency = 0.200		local NewImage = Instance.new(string.format("Image%s", Button and "Button" or "Label"));
Frame.BorderSizePixel = 0		NewImage.Image = ID;
Frame.Position = UDim2.new(0.773999989, 20, 0.931999981, -20)		NewImage.BackgroundTransparency = 1;
Frame.Size = UDim2.new(0, 278, 0, 78)		return NewImage;

end
TitleText.Name = "TitleText"	
TitleText.Parent = Frame	local function Round2px()
TitleText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)		local NewImage = Image("http://www.roblox.com/asset/?id=5761488251");
TitleText.BackgroundTransparency = 1.000		NewImage.ScaleType = Enum.ScaleType.Slice;
TitleText.Position = UDim2.new(0.0215827338, 0, 0, 0)		NewImage.SliceCenter = Rect.new(2, 2, 298, 298);
TitleText.Size = UDim2.new(0, 173, 0, 28)		NewImage.ImageColor3 = Color3.fromRGB(0, 0, 0);
TitleText.Font = Enum.Font.SourceSansBold		NewImage.ImageTransparency = 0.2
TitleText.Text = TitleAdonis		return NewImage;
TitleText.TextColor3 = Color3.fromRGB(255, 255, 255)	end
TitleText.TextSize = 26.000	
TitleText.TextXAlignment = Enum.TextXAlignment.Left	local function Shadow2px()

	local NewImage = Image("http://www.roblox.com/asset/?id=5761498316");
TextText.Name = "TextText"		NewImage.ScaleType = Enum.ScaleType.Slice;
TextText.Parent = Frame		NewImage.SliceCenter = Rect.new(17, 17, 283, 283);
TextText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)		NewImage.Size = UDim2.fromScale(1, 1) + UDim2.fromOffset(30, 30);
TextText.BackgroundTransparency = 1.000		NewImage.Position = -UDim2.fromOffset(15, 15);
TextText.Position = UDim2.new(0.0215827338, 0, 0.366666734, 0)		NewImage.ImageColor3 = Color3.fromRGB(26, 26, 26);
TextText.Size = UDim2.new(0, 268, 0, 43)		return NewImage;
TextText.Font = Enum.Font.SourceSansLight	end
TextText.Text = TextTextAdonis	
TextText.TextColor3 = Color3.fromRGB(255, 255, 255)	local Padding = 10;
TextText.TextScaled = true	local DescriptionPadding = 10;
TextText.TextSize = 14.000	local InstructionObjects = {};
TextText.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)	local TweenTime = 1;
TextText.TextWrapped = true	local TweenStyle = Enum.EasingStyle.Sine;
TextText.TextXAlignment = Enum.TextXAlignment.Left	local TweenDirection = Enum.EasingDirection.Out;
TextText.TextYAlignment = Enum.TextYAlignment.Top	

local LastTick = tick();
Exit.Name = "Exit"	
Exit.Parent = Frame	local function CalculateBounds(TableOfObjects)
Exit.BackgroundColor3 = Color3.fromRGB(30, 30, 30)		local TableOfObjects = typeof(TableOfObjects) == "table" and TableOfObjects or {};
Exit.BorderSizePixel = 0		local X, Y = 0, 0;
Exit.Position = UDim2.new(0.895683467, 0, 0.0333333351, 0)		for _, Object in next, TableOfObjects do
Exit.Size = UDim2.new(0, 25, 0, 22)			X += Object.AbsoluteSize.X;
Exit.Font = Enum.Font.SourceSansBold			Y += Object.AbsoluteSize.Y;
Exit.Text = "X"		end
Exit.TextColor3 = Color3.fromRGB(255, 255, 255)		return {X = X, Y = Y, x = X, y = Y};
Exit.TextScaled = true	end
Exit.TextSize = 14.000	
Exit.TextWrapped = true	local CachedObjects = {};


Timer.Name = "Timer"	local function Update()
Timer.Parent = Frame		local DeltaTime = tick() - LastTick;
Timer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)		local PreviousObjects = {};
Timer.BackgroundTransparency = 1.000		for CurObj, Object in next, InstructionObjects do
Timer.Position = UDim2.new(0.809352517, 0, 0.0666666701, 0)			local Label, Delta, Done = Object[1], Object[2], Object[3];
Timer.Size = UDim2.new(0, 24, 0, 18)			if (not Done) then
Timer.Font = Enum.Font.SourceSansBold				if (Delta < TweenTime) then
Timer.Text = TimerAdonis					Object[2] = math.clamp(Delta + DeltaTime, 0, 1);
Timer.TextColor3 = Color3.fromRGB(255, 255, 255)					Delta = Object[2];
Timer.TextSize = 20.000				else

				Object[3] = true;
local function HEFRDQL_fake_script() -- Notification.LocalScript 				end
	local script = Instance.new('LocalScript', Notification)			end

		local NewValue = TweenService:GetValue(Delta, TweenStyle, TweenDirection);
script.Parent.Frame:TweenPosition(UDim2.new(0.774, 20,0.887, -20), "Out", "Quint",1,true)			local CurrentPos = Label.Position;
wait(Timer2)			local PreviousBounds = CalculateBounds(PreviousObjects);
	    	script.Parent.Frame:TweenPosition(UDim2.new(0.774, 20,1.100, -20), "Out", "Quint",1,true)			local TargetPos = UDim2.new(0, 0, 0, PreviousBounds.Y + (Padding * #PreviousObjects));
		Label.Position = CurrentPos:Lerp(TargetPos, NewValue);
		table.insert(PreviousObjects, Label);
	end
	CachedObjects = PreviousObjects;
	LastTick = tick();
end

RunService:BindToRenderStep("UpdateList", 0, Update);

local TitleSettings = {
	Font = Enum.Font.GothamSemibold;
	Size = 14;
}

local DescriptionSettings = {
	Font = Enum.Font.Gotham;
	Size = 14;
}

local MaxWidth = (Container.AbsoluteSize.X - Padding - DescriptionPadding);

local function Label(Text, Font, Size, Button)
	local Label = Instance.new(string.format("Text%s", Button and "Button" or "Label"));
	Label.Text = Text;
	Label.Font = Font;
	Label.TextSize = Size;
	Label.BackgroundTransparency = 1;
	Label.TextXAlignment = Enum.TextXAlignment.Left;
	Label.RichText = true;
	Label.TextColor3 = Color3.fromRGB(255, 255, 255);
	return Label;
end	end
coroutine.wrap(HEFRDQL_fake_script)()	

local function TitleLabel(Text)
Exit.MouseButton1Click:Connect(function()		return Label(Text, TitleSettings.Font, TitleSettings.Size);
    	Frame:TweenPosition(UDim2.new(0.774, 20,1.100, -20), "Out", "Quint",1,true)	
wait(0.2)	
		Frame:Destroy()	
end)	

for i=1,TimerAdonis do	
wait(1)	
TimerAdonis = TimerAdonis - 1	
    Timer.Text = TimerAdonis	
end	end

local function DescriptionLabel(Text)
	return Label(Text, DescriptionSettings.Font, DescriptionSettings.Size);
end

local PropertyTweenOut = {
	Text = "TextTransparency",
	Fram = "BackgroundTransparency",
	Imag = "ImageTransparency"
}

local function FadeProperty(Object)
	local Prop = PropertyTweenOut[string.sub(Object.ClassName, 1, 4)];
	TweenService:Create(Object, TweenInfo.new(0.25, TweenStyle, TweenDirection), {
		[Prop] = 1;
	}):Play();
end

local function SearchTableFor(Table, For)
	for _, v in next, Table do
		if (v == For) then
			return true;
		end
	end
	return false;
end

local function FindIndexByDependency(Table, Dependency)
	for Index, Object in next, Table do
		if (typeof(Object) == "table") then
			local Found = SearchTableFor(Object, Dependency);
			if (Found) then
				return Index;
			end
		else
			if (Object == Dependency) then
				return Index;
			end
		end
	end
end

local function ResetObjects()
	for _, Object in next, InstructionObjects do
		Object[2] = 0;
		Object[3] = false;
	end
end

local function FadeOutAfter(Object, Seconds)
	wait(Seconds);
	FadeProperty(Object);
	for _, SubObj in next, Object:GetDescendants() do
		FadeProperty(SubObj);
	end
	wait(0.25);
	table.remove(InstructionObjects, FindIndexByDependency(InstructionObjects, Object));
	ResetObjects();
	Object.Visible = false
end	end


TheNotificationFrame()	return {
	Notify = function(Properties)
		local Properties = typeof(Properties) == "table" and Properties or {};
		local Title = Properties.Title;
		local Description = Properties.Description;
		local Duration = Properties.Duration or 5;
		if (Title) or (Description) then -- Check that user has provided title and/or description
			local Y = Title and 26 or 0;
			if (Description) then
				local TextSize = TextService:GetTextSize(Description, DescriptionSettings.Size, DescriptionSettings.Font, Vector2.new(0, 0));
				for i = 1, math.ceil(TextSize.X / MaxWidth) do
					Y += TextSize.Y;
				end
				Y += 8;
			end
			local NewLabel = Round2px();
			NewLabel.Size = UDim2.new(1, 0, 0, Y);
			NewLabel.Position = UDim2.new(-1, 20, 0, CalculateBounds(CachedObjects).Y + (Padding * #CachedObjects));
			if (Title) then
				local NewTitle = TitleLabel(Title);
				NewTitle.Size = UDim2.new(1, -10, 0, 26);
				NewTitle.Position = UDim2.fromOffset(10, 0);
				NewTitle.Parent = NewLabel;
			end
			if (Description) then
				local NewDescription = DescriptionLabel(Description);
				NewDescription.TextWrapped = true;
				NewDescription.Size = UDim2.fromScale(1, 1) + UDim2.fromOffset(-DescriptionPadding, Title and -26 or 0);
				NewDescription.Position = UDim2.fromOffset(10, Title and 26 or 0);
				NewDescription.TextYAlignment = Enum.TextYAlignment[Title and "Top" or "Center"];
				NewDescription.Parent = NewLabel;
			end
			Shadow2px().Parent = NewLabel;
			NewLabel.Parent = Container;
			table.insert(InstructionObjects, {NewLabel, 0, false});
			coroutine.wrap(FadeOutAfter)(NewLabel, Duration);
		end
	end,
}
